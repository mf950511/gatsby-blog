{"componentChunkName":"component---src-templates-blog-small-jsx","path":"/blog/lazy_event/","result":{"data":{"markdownRemark":{"html":"<h1>事件绑定的两种优化方式</h1>\n<ul>\n<li>事件绑定在我们的项目中是经常存在的，但因为各浏览器对事件绑定的支持度不同，使我们不得不写一个兼容函数来实现事件绑定，常规的写法如下</li>\n</ul>\n<pre><code class=\"language-js\">function on(dom, type, fn){\n  if(document.addEventListener) { // IE9以上及主流浏览器\n    dom.addEventListener(type, fn, false)\n  } else if(document.attachEvent) { // IE8一下浏览器\n    dom.attachEvent('on' + type, fn)\n  } else { // dom0级支持浏览器\n    dom['on' + type] = fn\n  }\n}\n</code></pre>\n<ul>\n<li>上面的写法虽然能解决我们的问题，但是在页面中使用时，每绑定一次就要走一次逻辑判断，而这一部分其实是可以优化的，优化的方式一般有两种，一种是页面加载完毕便执行一个立即执行函数完成on的赋值，另一个则是在第一次调用的时候完成on的重新赋值</li>\n<li>页面加载完成赋值的实现如下</li>\n</ul>\n<!--more-->\n<pre><code class=\"language-js\">var on = (function(){\n  if(document.addEventListener) {\n    return function(dom, type, fn){\n      dom.addEventListener(type, fn)\n    }\n  } else if(document.attachEvent) {\n    return function(dom, type, fn){\n      dom.attachEvent('on' + type, fn)\n    }\n  } else {\n    return function(dom, type, fn){\n      dom['on' + type] = fn\n    }\n  }\n})()\n</code></pre>\n<ul>\n<li>通过开始的立即执行函数完成条件判断，并重新返回一个符合该浏览器兼容的绑定函数给on，这样在之后的函数绑定时就会使用这个返回的函数而不用再去判断一次浏览器情况</li>\n<li>缺陷就是在页面开始加载的时候就会执行，如果页面依赖比较多的情况下建议使用第二种方式</li>\n<li>第一次调用时绑定，也就是利用懒性模式实现绑定，实现方式如下</li>\n</ul>\n<pre><code class=\"language-js\">function on(dom, type, fn){\n  if(document.addEventListener) {\n    on = function(dom, type, fn){\n      dom.addEventListener(type, fn, false)\n    }\n  }else if(document.attachEvent) {\n    on = function(dom, type, fn){\n      dom.attachEvent('on' + type, fn)\n    }\n  } else {\n    on = function(dom, type, fn){\n      dom['on' + type] = fn\n    }\n  }\n  on(dom, type, fn)\n}\n</code></pre>\n<ul>\n<li>这种方式的实现是在浏览器判断条件完成之后对on重新赋值，并且在赋值之后进行函数的调用，这样在第一次执行之后on就被重新赋值，下次绑定就不会再走条件判断了，适用于首屏加载依赖比较多的情况</li>\n</ul>","frontmatter":{"title":"事件绑定的两种优化方式","date":"2019-11-01","tags":["JavaScript回顾","设计模式","进修"],"categories":"JavaScript"},"fields":{"slug":"/lazy_event/"}}},"pageContext":{"slug":"/lazy_event/"}},"staticQueryHashes":["2566592090"]}