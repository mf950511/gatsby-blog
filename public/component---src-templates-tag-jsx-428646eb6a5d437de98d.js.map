{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/tagList/tagList.jsx"],"names":["Tag","props","state","tagList","componentDidMount","edges","this","data","allMarkdownRemark","obj","forEach","item","date","node","frontmatter","split","console","log","year","tag","title","time","tags","categories","slug","fields","push","setState","render","handleScroll","bind","React","Component","query","Object","keys","map","key","className","index","data-flex","to"],"mappings":"8OAIqBA,E,YACnB,WAAYC,GAAO,IAAD,SAChB,cAAMA,IAAN,MACKC,MAAQ,CACXC,QAAS,IAHK,E,4CAOlBC,kBAAA,WACE,IAAMC,EAAQC,KAAKL,MAAMM,KAAKC,kBAAkBH,MAC1CI,EAAM,GACZJ,EAAMK,SAAQ,SAAAC,GAEZ,IAAIC,GADJD,EAAOA,EAAKE,MACIC,YAAYF,KAAKG,MAAM,KACvCC,QAAQC,IAAIN,GACZK,QAAQC,IAAIL,GACZ,IAAIM,EAAON,EAAK,GACZO,EAAM,GACVA,EAAIC,MAAQT,EAAKG,YAAYM,MAC7BD,EAAIE,KAAOT,EAAK,GAChBO,EAAIG,KAAOX,EAAKG,YAAYQ,KAC5BH,EAAII,WAAaZ,EAAKG,YAAYS,WAClCJ,EAAIK,KAAOb,EAAKc,OAAOD,KACpBf,EAAIS,KAGLT,EAAIS,GAAQ,IAFZT,EAAIS,GAAMQ,KAAKP,MAMnBb,KAAKqB,SAAS,CACZxB,QAASM,K,EAGbmB,OAAA,WACE,OACE,kBAAC,IAAD,CAAQC,aAAcvB,KAAKuB,aAAaC,KAAKxB,OAC3C,kBAAC,IAAD,CAASH,QAASG,KAAKJ,MAAMC,Y,EAInC0B,aAAA,a,GAzC+BE,IAAMC,WA4C1BC,EAAK,c,kCChDlB,iDAGe,oBAAE9B,EAAF,EAAEA,QAAF,OACb,6BAEI+B,OAAOC,KAAKhC,GAASiC,KAAI,SAAAC,GACvB,IAAIxB,EAAOV,EAAQkC,GACfnB,EAAOmB,EACX,OACE,6BAASC,UAAU,gBAAgBD,IAAKA,GACtC,yBAAKC,UAAU,qBACZpB,GAEH,yBAAKoB,UAAU,YAEbzB,EAAKuB,KAAI,SAACzB,EAAM4B,GAAP,OACL,6BAASD,UAAU,kBAAkBD,IAAKE,GACxC,4BAAQD,UAAU,0BAChB,yBAAKA,UAAU,qBAAqBE,YAAU,yBAC5C,yBAAKF,UAAU,iBACb,kBAAC,IAAD,CAAMG,GAAE,QAAU9B,EAAKa,MAASb,EAAKS,QAEvC,8BAAOT,EAAKU,OAEd,yBAAKiB,UAAU,kBACb,kBAAC,IAAD,CAASf,WAAYZ,EAAKY,WAAYD,KAAMX,EAAKW","file":"component---src-templates-tag-jsx-428646eb6a5d437de98d.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from 'components/layout/layout'\r\nimport TagList from 'components/tagList/tagList'\r\nexport default class Tag extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      tagList: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    const edges = this.props.data.allMarkdownRemark.edges\r\n    const obj = {}\r\n    edges.forEach(item => {\r\n      item = item.node\r\n      let date = item.frontmatter.date.split(':')\r\n      console.log(item)\r\n      console.log(date)\r\n      let year = date[0]\r\n      let tag = {}\r\n      tag.title = item.frontmatter.title\r\n      tag.time = date[1]\r\n      tag.tags = item.frontmatter.tags\r\n      tag.categories = item.frontmatter.categories\r\n      tag.slug = item.fields.slug\r\n      if(obj[year]) {\r\n        obj[year].push(tag)\r\n      } else {\r\n        obj[year] = []\r\n        obj[year].push(tag)\r\n      }\r\n    })\r\n    this.setState({\r\n      tagList: obj\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <Layout handleScroll={this.handleScroll.bind(this)}>\r\n        <TagList tagList={this.state.tagList}></TagList>\r\n      </Layout>\r\n    )\r\n  }\r\n  handleScroll(){}\r\n}\r\n\r\nexport const query = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 10,\r\n      filter: {\r\n        frontmatter: {tags: {in: [$tag]}}\r\n      }\r\n      sort: {fields: [frontmatter___date],order: DESC}\r\n    ){\r\n      edges{\r\n        node{\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter{\r\n            date(formatString:\"YYYY:MM-DD\")\r\n            tags\r\n            categories\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport TagInfo from 'components/tagList/tagInfo'\r\nexport default ({tagList})=> (\r\n  <div>\r\n    {\r\n      Object.keys(tagList).map(key => {\r\n        let node = tagList[key]\r\n        let year = key\r\n        return (\r\n          <section className=\"archives-wrap\" key={key}>\r\n            <div className=\"archive-year-wrap\">\r\n              {year}\r\n            </div>\r\n            <div className=\"archives\">\r\n            {\r\n              node.map((item, index) => (\r\n                  <article className=\"archive-article\" key={index}>\r\n                    <header className=\"archive-article-header\">\r\n                      <div className=\"archive-title-wrap\" data-flex=\"main:justify box:last\">\r\n                        <div className=\"archive-title\">\r\n                          <Link to={`/blog${item.slug}`}>{item.title}</Link>\r\n                        </div>\r\n                        <time>{item.time}</time>\r\n                      </div>\r\n                      <div className=\"tagInfoWrapper\">\r\n                        <TagInfo categories={item.categories} tags={item.tags}></TagInfo>\r\n                      </div>\r\n                    </header>\r\n                  </article>\r\n              ))\r\n            }\r\n            </div>\r\n          </section>\r\n        )\r\n      })\r\n    }\r\n  </div>\r\n)"],"sourceRoot":""}