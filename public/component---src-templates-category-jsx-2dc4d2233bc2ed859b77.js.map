{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["Tag","props","_this","_React$Component","call","this","state","tagList","componentDidMount","edges","data","allMarkdownRemark","obj","forEach","item","date","node","frontmatter","split","console","log","year","tag","title","time","tags","categories","slug","fields","push","setState","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","components_layout_layout__WEBPACK_IMPORTED_MODULE_4__","handleScroll","bind","components_tagList_tagList__WEBPACK_IMPORTED_MODULE_5__","React","Component","query"],"mappings":"6OAIqBA,cACnB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,QAAS,IAHKL,sCAOlBM,6BACE,IAAMC,EAAQJ,KAAKJ,MAAMS,KAAKC,kBAAkBF,MAC1CG,EAAM,GACZH,EAAMI,QAAQ,SAAAC,GAEZ,IAAIC,GADJD,EAAOA,EAAKE,MACIC,YAAYF,KAAKG,MAAM,KAEvCC,QAAQC,IAAIL,GACZ,IAAIM,EAAON,EAAK,GACZO,EAAM,GACVA,EAAIC,MAAQT,EAAKG,YAAYM,MAC7BD,EAAIE,KAAOT,EAAK,GAChBO,EAAIG,KAAOX,EAAKG,YAAYQ,KAC5BH,EAAII,WAAaZ,EAAKG,YAAYS,WAClCJ,EAAIK,KAAOb,EAAKc,OAAOD,KACpBf,EAAIS,GACLT,EAAIS,GAAMQ,KAAKP,IAEfV,EAAIS,GAAQ,GACZT,EAAIS,GAAMQ,KAAKP,MAGnBjB,KAAKyB,SAAS,CACZvB,QAASK,OAGbmB,kBACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,aAAc/B,KAAK+B,aAAaC,KAAKhC,OAC3C2B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAS/B,QAASF,KAAKC,MAAMC,cAInC6B,6BAzC+BG,IAAMC,WA4C1BC,EAAK","file":"component---src-templates-category-jsx-2dc4d2233bc2ed859b77.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from 'components/layout/layout'\r\nimport TagList from 'components/tagList/tagList'\r\nexport default class Tag extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      tagList: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    const edges = this.props.data.allMarkdownRemark.edges\r\n    const obj = {}\r\n    edges.forEach(item => {\r\n      item = item.node\r\n      let date = item.frontmatter.date.split(':')\r\n      \r\n      console.log(date)\r\n      let year = date[0]\r\n      let tag = {}\r\n      tag.title = item.frontmatter.title\r\n      tag.time = date[1]\r\n      tag.tags = item.frontmatter.tags\r\n      tag.categories = item.frontmatter.categories\r\n      tag.slug = item.fields.slug\r\n      if(obj[year]) {\r\n        obj[year].push(tag)\r\n      } else {\r\n        obj[year] = []\r\n        obj[year].push(tag)\r\n      }\r\n    })\r\n    this.setState({\r\n      tagList: obj\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <Layout handleScroll={this.handleScroll.bind(this)}>\r\n        <TagList tagList={this.state.tagList}></TagList>\r\n      </Layout>\r\n    )\r\n  }\r\n  handleScroll(){}\r\n}\r\n\r\nexport const query = graphql`\r\n  query($categories: String) {\r\n    allMarkdownRemark(\r\n      limit: 10,\r\n      filter: {\r\n        frontmatter: {categories: {eq: $categories}}\r\n      }\r\n      sort: {fields: [frontmatter___date],order: DESC}\r\n    ){\r\n      edges{\r\n        node{\r\n          fields{\r\n            slug\r\n          }\r\n          frontmatter{\r\n            date(formatString:\"YYYY:MM-DD\")\r\n            tags\r\n            categories\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}