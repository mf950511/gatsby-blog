{"data":{"markdownRemark":{"html":"<h1>JavaScript中的对象</h1>\n<h2>原型</h2>\n<ul>\n<li>每个对象都连接到一个原型对象，并且可以继承原型对象的属性</li>\n<li>通过字面量创建的对象都会连接到Object.prototype，它是JavaScript中的标配对象</li>\n<li>我们可以在创建对象的时候选择另一个对象作为它的原型</li>\n<li>\n<p>ES5中提供的Object.create可以帮我们实现原型对象的绑定（绑定至指定对象）</p>\n<!--more-->\n</li>\n</ul>\n<h1>原型绑定</h1>\n<ul>\n<li>\n<p>下列代码就实现了对象stog绑定原型至stooge的过程</p>\n<pre><code class=\"language-js\">var stooge = {\na: 1,\nb: 2\n}\nvar stog = Object.create(stooge)\nconsole.log(stog.a)   // 1\nconsole.log(stog.b)   // 2\nstooge.c = 3\nconsole.log(stog.c)   // 3\nstog.d = 4\nconsole.log(stooge.d) // 4\n</code></pre>\n</li>\n<li>\n<p>这里我们就实现了将stog的原型绑定至stooge，所以当从自身没找到改属性值时会沿原型链往上找，找到原型对象中的属性值</p>\n</li>\n<li>\n<p>若原型对象中也没有，则会返回undefined</p>\n</li>\n</ul>\n<h2>手动实现Object.create</h2>\n<pre><code class=\"language-js\">  Object.createPrototype = function(o){\n    var F = function(){}\n    F.prototype = o\n    return new F()\n  }\n  var stooge = {\n    a: 1\n  }\n  var stog = Object.createPrototype(stooge)\n  console.log(stog.a) // 1\n</code></pre>\n<ul>\n<li>这里我们自己构造一个对象属性，接受一个对象作为参数，并在函数内部新建一个构造函数</li>\n<li>将改构造函数的原型指定为我们传入的对象实现原型绑定，并将新对象返回</li>\n</ul>\n<h2>属性枚举</h2>\n<ul>\n<li>有时候我们需要获取一个对象的私有属性，而不是其原型链上的属性</li>\n<li>\n<p>这时我们就需要使用for...in循环跟hasOwnProperty函数来进行筛选</p>\n<pre><code class=\"language-js\">var obj1 = {\na: 1,\nb: 2\n}\nvar obj2 = Object.create(obj1)\nobj2.c = 3\nfor(var key in obj2) {\nconsole.log(key) // c a b\nif(obj2.hasOwnProperty(key)) {\n  console.log(key) // c\n}\n}\n</code></pre>\n</li>\n<li>这里for...in会获取对象及其原型链上的属性值，所以我们需要hasOwnProperty()来获取独属于它的属性</li>\n</ul>\n<h2>删除对象属性</h2>\n<ul>\n<li>删除对象的制定属性需要使用delete操作符</li>\n<li>\n<p>delete 对象.属性即可删除该属性</p>\n<pre><code class=\"language-js\">var testDelete = {\ncanDelete: '我是原型属性'\n}\nvar testDelete1 = Object.create(testDelete)\ntestDelete1.canDelete = '我是私有属性'\nconsole.log(testDelete1.canDelete) // 我是私有属性\ndelete testDelete1.canDelete\nconsole.log(testDelete1.canDelete) // 我是原型属性\n</code></pre>\n</li>\n<li>这里删除之前打印的为我们展示的是该对象的私有属性</li>\n<li>删除之后对象本身找不到该属性，便回到原型链查找，从而返回原型对象的该属性</li>\n</ul>","frontmatter":{"title":"JavaScript语言精粹-对象","date":"2019-03-14T00:00:00.000Z","tags":["JavaScript","进修"],"categories":"JavaScript"},"fields":{"slug":"/goodJavaScript_object/"}}},"pageContext":{"slug":"/goodJavaScript_object/"}}